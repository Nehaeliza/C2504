CREATE DATABASE coding_db;
USE coding_db;

CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,   
    Name VARCHAR(100) NOT NULL    
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,       
    CustomerID INT,               
    OrderDate DATE NOT NULL,       
    FOREIGN KEY (CustomerID) 
        REFERENCES Customers(CustomerID)  
);

INSERT INTO Customers (CustomerID, Name)
VALUES 
(1, 'Alice'),
(2, 'Bob'),
(3, 'Charlie'),
(4, 'David'),
(5, 'Eve');

INSERT INTO Orders (OrderID, CustomerID, OrderDate)
VALUES
(101, 1, '2024-01-15'),
(102, 2, '2024-02-20'),
(103, 1, '2024-03-10'),
(104, 3, '2024-04-05'),
(105, 4, '2024-04-20'),
(106, 2, '2024-05-25'),
(107, 5, '2024-06-15'),
(108, 1, '2024-07-01');


-----find customers who have placed more than one order.-----

SELECT c.CustomerID, c.Name, COUNT(o.OrderID) AS NumberOfOrders
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.Name
HAVING COUNT(o.OrderID) > 1;



-----Find the Most Recent OrderDate for Each Customer-----

SELECT CustomerID, MAX(OrderDate) AS MostRecentOrder
FROM Orders
GROUP BY CustomerID;


-----most recent order for each customer-----

SELECT o1.CustomerID,
       o1.OrderID,
       o1.OrderDate
FROM Orders o1
INNER JOIN (
    SELECT CustomerID,
           MAX(OrderDate) AS MostRecentOrderDate
    FROM Orders
    GROUP BY CustomerID
) o2 ON o1.CustomerID = o2.CustomerID
    AND o1.OrderDate = o2.MostRecentOrderDate;



-----Creating Sales Table-----

CREATE TABLE Sales (
    ProductID INT,                   
    SaleAmount DECIMAL(10, 2),       
    SaleDate DATE,                    
    PRIMARY KEY (ProductID, SaleDate) 
);

INSERT INTO Sales(ProductID,SaleAmount,SaleDate) VALUES
(1, 100.00, '2024-01-15'),
(1, 200.00, '2024-03-10'),
(1, 150.00, '2024-05-20'),
(2, 300.00, '2024-02-20'),
(2, 250.00, '2024-04-25'),
(3, 400.00, '2024-03-15'),
(3, 350.00, '2024-05-10'),
(4, 200.00, '2024-06-05'),
(4, 150.00, '2024-07-10'),
(5, 500.00, '2024-01-30'),
(5, 250.00, '2024-03-25'),
(6, 150.00, '2024-04-15'),
(6, 100.00, '2024-06-20'),
(7, 300.00, '2024-07-05'),
(7, 200.00, '2024-08-15');


SELECT * FROM Sales;

-----find the top 5 products by total sales volume.-----

SELECT TOP 5 ProductID, SUM(SaleAmount) AS TotalSales
FROM Sales
GROUP BY ProductID
ORDER BY SUM(SaleAmount) DESC


-----Creating Employees Table-----

CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,    
    Name VARCHAR(100) NOT NULL,   
    Salary DECIMAL(10, 2) NOT NULL 
);

INSERT INTO Employees( EmployeeID, Name,Salary) VALUES

(1, 'Niya ', 70000.00),
(2, 'Bobby', 80000.00),
(3, 'Rittu ', 65000.00),
(4, 'Soorya ', 72000.00),
(5, 'Sree ', 75000.00);

SELECT * FROM Employees;

-----find the second highest salary.-----

SELECT MAX(Salary) AS SecondHighestSalary
FROM Employees 
WHERE Salary<(SELECT MAX(Salary) FROM Employees)

-----Adding DepartmentID to emp table-----

ALTER TABLE Employees
ADD DepartmentID INT;

-----Updating values into employees dept------

UPDATE Employees
SET DepartmentID = 10
WHERE EmployeeID = 1;

UPDATE Employees
SET DepartmentID = 10
WHERE EmployeeID = 2;

UPDATE Employees
SET DepartmentID = 20
WHERE EmployeeID = 3;

UPDATE Employees
SET DepartmentID = 20
WHERE EmployeeID = 4;

UPDATE Employees
SET DepartmentID = 30
WHERE EmployeeID = 5;



-----find the average salary and number of employees in each department.-----


SELECT DepartmentID, AVG(Salary) AS AverageSalary,
              COUNT(EmployeeID) AS NumberOfEmployees

FROM Employees
GROUP BY DepartmentID;





